# Reference from:
# https://goreleaser.com/ci/actions/
name: Release
on:
  push:
    tags:
      - "v*"
permissions:
  contents: write
jobs:
  Test:
    name: Unit tests with coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go 1.19
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - run: make build-local-linux-all

      - name: Running go tests with coverage
        env:
          GO111MODULE: on
        run: make cover
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: coverage.out
  Lint:
    name: Lint checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go 1.19
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - name: Download golangci-lint
        run: |
          wget https://github.com/golangci/golangci-lint/releases/download/v1.52.2/golangci-lint-1.52.2-linux-amd64.tar.gz
          tar -xvf ./golangci-lint-1.52.2-linux-amd64.tar.gz
      - name: Running golangci-lint
        env:
          GO111MODULE: on
          GOPATH: /home/runner/work/
        run: GOLINTER=./golangci-lint-1.52.2-linux-amd64/golangci-lint make lint
  Publish: # Pack and publish image to Docker Hub and Github Release
    runs-on: ubuntu-latest
    needs: [Test, Lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      # <--- Build and Package --->
      - name: Pack release packages for multiple platforms
        env:
          GO111MODULE: on
        run: make build-all
      # <--- Get version informations --->
      - name: Get version
        id: get_version
        run: |
          echo "::set-output name=karbour_version::$(./_build/karbour-linux/karbour -V | cut -d ';' -f 1)"
      # <--- Login, build and push image to Docker Hub --->
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: kusionstack/karbour:latest,kusionstack/karbour:${{ steps.get_version.outputs.karbour_version }}
      # <--- Push karbour big packages for multiple platforms to Github Release --->
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: ./_build/bundles/*.tgz*
          append_body: true
          body: |
            ## Docker Images
            * `kusionstack/karbour:${{ steps.get_version.outputs.karbour_version }}`
      # <--- End --->
